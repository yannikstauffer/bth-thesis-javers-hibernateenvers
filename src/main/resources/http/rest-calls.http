### Create a new thread
POST http://localhost:8080/{{implementation}}/threads
Content-Type: application/json
Accept: application/json

{}

> {%
    client.test("Create a new thread", function () {
        client.assert(response.status === 201, "Response status is not 201");
        client.global.set("threadId", response.body);
    });
%}

### Get all threads
GET http://localhost:8080/{{implementation}}/threads
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get all threads", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}


### Update a thread
< {%
    client.global.set("updateId", $timestamp);
%}

POST http://localhost:8080/{{implementation}}/threads/{{threadId}}
Content-Type: application/json
Accept: application/json

{
  "title": "updated title {{updateId}}",
  "content": "updated content {{updateId}}"
}

> {%
    client.test("Update a thread", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Check updated thread
GET http://localhost:8080/{{implementation}}/threads/{{threadId}}
Content-Type: application/json
Accept: application/json

> {%
    let updatedId = client.global.get("updateId");
    client.test("Check updated thread", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.title === "updated title " + updatedId, "Faulty title: " + response.body.title);
        client.assert(response.body.content === "updated content " + updatedId, "Faulty content: " + response.body.content);
    });
%}

### Delete updated thread
DELETE http://localhost:8080/{{implementation}}/threads/{{threadId}}
Content-Type: application/json

> {%
    client.test("Delete updated thread", function () {
        client.assert(response.status === 204, "Response status is not 204");
    });
%}

### Check if thread is deleted
GET http://localhost:8080/{{implementation}}/threads/{{threadId}}
Content-Type: application/json
Accept: application/json

> {%
    client.test("Check if thread is deleted", function () {
        client.assert(response.status === 404, "Response status is not 404");
    });
%}

### Get snapshots
GET http://localhost:8080/{{implementation}}/threads/snapshots
Content-Type: application/json
Accept: application/json

> {%
    client.log(response.body);
    client.test("Get snapshots", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}
